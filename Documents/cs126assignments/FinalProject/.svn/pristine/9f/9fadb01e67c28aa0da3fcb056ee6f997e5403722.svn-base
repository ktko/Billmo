package com.example.katieko.finalproject;

import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.ChildEventListener;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

/**
 * Created by katieko on 5/2/17.
 */

public class PayActivity extends AppCompatActivity {
    private FirebaseDatabase database = FirebaseDatabase.getInstance();
    private DatabaseReference plansRef = database.getReference("Transactions");
    private DatabaseReference usersRef = database.getReference("Users");
    private FirebaseAuth auth = FirebaseAuth.getInstance();

    public static double calculateBillPortion(double billAmount, double tip, int numPayers) {
        double finalTotal = billAmount * (1 + tip);
        double userPortion = finalTotal / numPayers;

        return userPortion;
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_pay);

        Intent intent = getIntent();
        final String planID = intent.getStringExtra("planID");

        // Read from the database
        plansRef.orderByKey().equalTo(planID).addChildEventListener(new ChildEventListener() {
            @Override
            public void onChildAdded(DataSnapshot dataSnapshot, String s) {
                PaymentPlan paymentPlan = dataSnapshot.getValue(PaymentPlan.class);
                double billAmount = paymentPlan.getBillAmount();
                double tip = paymentPlan.getTip();
                double billTotal = billAmount * (1 + tip);
                int numPayers = paymentPlan.getPayers().size();
                final double userPortion = calculateBillPortion(billAmount, tip, numPayers);
                double remainingTotal = billTotal - userPortion;
                paymentPlan.setBillAmount(remainingTotal);

                usersRef.orderByKey().equalTo(auth.getCurrentUser().getUid()).addChildEventListener(new ChildEventListener() {
                    @Override
                    public void onChildAdded(DataSnapshot dataSnapshot, String s) {
                        Account account = dataSnapshot.getValue(Account.class);
                        double balance = account.getBalance();
                        double remainingBalance = balance - userPortion;
                        account.setBalance(remainingBalance);
                        usersRef.child(auth.getCurrentUser().getUid()).setValue(account);
                    }

                    @Override
                    public void onChildChanged(DataSnapshot dataSnapshot, String s) {

                    }

                    @Override
                    public void onChildRemoved(DataSnapshot dataSnapshot) {

                    }

                    @Override
                    public void onChildMoved(DataSnapshot dataSnapshot, String s) {

                    }

                    @Override
                    public void onCancelled(DatabaseError databaseError) {

                    }
                });
            }

            @Override
            public void onChildChanged(DataSnapshot dataSnapshot, String s) {

            }

            @Override
            public void onChildRemoved(DataSnapshot dataSnapshot) {

            }

            @Override
            public void onChildMoved(DataSnapshot dataSnapshot, String s) {

            }

            @Override
            public void onCancelled(DatabaseError databaseError) {

            }
        });

        Button payButton = (Button) findViewById(R.id.payButton);
        payButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

            }
        });
    }
}
