package com.example.katieko.finalproject;

import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.widget.Toast;

import com.firebase.ui.auth.AuthUI;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.net.URL;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by katieko on 4/29/17.
 */

public class MainScreenActivity extends AppCompatActivity {
    private RecyclerView mRecyclerView;
    private ArrayList<PaymentPlan> mPlans = new ArrayList<>();
    private PlansAdapter mPlansAdapter;

    private String title;
    private String billTotal;
    private String description;

    private FirebaseDatabase database = FirebaseDatabase.getInstance();
    private DatabaseReference myRef = database.getReference("Transactions");

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 1) {
            if(resultCode == RESULT_OK) {
                title = data.getStringExtra("title");
                billTotal = data.getStringExtra("bill total");
                description = data.getStringExtra("description");
            }
        }
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate( savedInstanceState );
        setContentView(R.layout.activity_mainscreen);

        // Read from the database
        myRef.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                // This method is called once with the initial value and again
                // whenever data at this location is updated.
                String value = dataSnapshot.getValue(String.class);
                for (DataSnapshot d : dataSnapshot.getChildren()) {
                    // returns payment plan
                    PaymentPlan plan = d.getValue(PaymentPlan.class);
                    mPlans.add(plan);
                }
                Log.d("success", "Value is: " + value);
            }

            @Override
            public void onCancelled(DatabaseError error) {
                // Failed to read value
                Log.w("fail", "Failed to read value.", error.toException());
            }
        });

        mRecyclerView = (RecyclerView) findViewById(R.id.recyclerView);
        mRecyclerView.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false));

        mPlansAdapter = new PlansAdapter(mPlans);
        mRecyclerView.setAdapter(mPlansAdapter);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.mainscreen_menu, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch(item.getItemId()) {
            case R.id.create_plan_menu:
                startActivity(new Intent(getApplicationContext(), NewPlanActivity.class));
                return true;
            case R.id.join_menu:
                startActivity(new Intent(getApplicationContext(), JoinPlanActivity.class));
                return true;
            case R.id.view_profile_menu:
                startActivity(new Intent(getApplicationContext(), ViewProfileActivity.class));
                return true;
            case R.id.sign_out_menu:
                AuthUI.getInstance().signOut(this);
                startActivity(new Intent(getApplicationContext(), LoginActivity.class));
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
}
